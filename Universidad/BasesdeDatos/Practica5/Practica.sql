SET SERVEROUTPUT ON;
DECLARE
  CURSOR c IS SELECT * FROM PARTIDOS;
  NOMBRE PARTIDOS.PRESIDENTE%type;
  PRIMERAPELLIDO PARTIDOS.PRESIDENTE%type;
  SEGUNDOAPELLIDO PARTIDOS.PRESIDENTE%type;
BEGIN
  FOR ROW IN C LOOP
    NOMBRE:=SUBSTR(ROW.PRESIDENTE, 1, INSTR(ROW.PRESIDENTE, ' ') - 1);
    PRIMERAPELLIDO:=SUBSTR(ROW.PRESIDENTE, INSTR(ROW.PRESIDENTE, ' ') + 1, INSTR(ROW.PRESIDENTE, ' ', 1, 2) - INSTR(ROW.PRESIDENTE, ' ') - 1);
    SEGUNDOAPELLIDO:=SUBSTR(ROW.PRESIDENTE, INSTR(ROW.PRESIDENTE, ' ', 1, 2) + 1, LENGTH(ROW.PRESIDENTE) - INSTR(ROW.PRESIDENTE, ' ', 1, 2));
    IF SUBSTR(NOMBRE, -1)='o'
        AND SUBSTR(PRIMERAPELLIDO, -1)='o'
        AND SUBSTR(SEGUNDOAPELLIDO, -1)='o'
    THEN
      DBMS_OUTPUT.PUT_LINE(ROW.PRESIDENTE);
    END IF;
  END LOOP;
END;
----------------------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  TYPE TABLA_HASH IS TABLE OF FLOAT INDEX BY VARCHAR2(100);
  MITABLA TABLA_HASH;
  KEY VARCHAR2(100);
  CURSOR RESULTADOS IS 
  SELECT NOMBRECOMPLETO, RESULTADO FROM PARTIDOS P, EVENTOS_RESULTADOS E
  WHERE P.IDPARTIDO=E.PARTIDO;
BEGIN
  FOR I IN RESULTADOS LOOP
    IF NOT MITABLA.EXISTS(I.NOMBRECOMPLETO) THEN
      MITABLA(I.NOMBRECOMPLETO):=I.RESULTADO;
    ELSE
      MITABLA(I.NOMBRECOMPLETO):=MITABLA(I.NOMBRECOMPLETO)+I.RESULTADO;
    END IF;
  END LOOP;
  KEY:=MITABLA.FIRST;
  WHILE KEY IS NOT NULL LOOP
    DBMS_OUTPUT.PUT_LINE(KEY || ' => ' || MITABLA(KEY));
    KEY:=MITABLA.NEXT(KEY);
  END LOOP;
END;
----------------------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  CURSOR VOT IS
  SELECT V.DNI,V.NOMBRECOMPLETO, V.LOCALIDAD FROM VOTANTES V;
  COUNTER NUMBER:=0;
BEGIN
 FOR I IN VOT LOOP
    IF SUBSTR(I.DNI,LENGTH(I.DNI),LENGTH(I.DNI))=I.LOCALIDAD+1 
    THEN
        DBMS_OUTPUT.PUT_LINE(I.NOMBRECOMPLETO);
        COUNTER:=COUNTER+1;
    END IF;
 END LOOP;
  DBMS_OUTPUT.PUT_LINE('Hay un total de '||COUNTER||' votantes');
END;
----------------------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  CURSOR DNIS IS 
  SELECT DNI FROM VOTANTES ORDER BY DNI DESC;
  DNIANTERIOR VOTANTES.DNI%TYPE;
  
BEGIN
  FOR UNDNI IN DNIS LOOP
    IF DNIS%ROWCOUNT>1 THEN
      DBMS_OUTPUT.PUT_LINE(DNIANTERIOR|| ' va antes que ' ||UNDNI.DNI);
    END IF;
      DNIANTERIOR:=UNDNI.DNI;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('El menor es:'||DNIANTERIOR);
END;
----------------------------------------------------------------------
--Parte2
SET SERVEROUTPUT ON;
DECLARE
  CURSOR C IS 
  SELECT V.NOMBRECOMPLETO, DECODE(L.NOMBRE, 'Cordoba', 'Madrid', 'Montilla', 'Madrid', 'Baena', 'Madrid', L.NOMBRE) "CIUDADES" FROM VOTANTES V, LOCALIDADES L
  WHERE L.IDLOCALIDAD=V.LOCALIDAD;
BEGIN 
 FOR I IN C LOOP
    DBMS_OUTPUT.PUT_LINE(I.NOMBRECOMPLETO || ' es de ' || I.CIUDADES);
 END LOOP;
END;

----------------------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  CURSOR C IS
  SELECT VOTANTE, COUNT(VOTANTE) VECES FROM CONSULTAS
  GROUP BY VOTANTE
  ORDER BY VECES DESC;
  MEDIA FLOAT;
BEGIN
  SELECT AVG(COUNT(VOTANTE)) INTO MEDIA FROM CONSULTAS 
  GROUP BY VOTANTE;
  FOR AROV IN C LOOP
    IF AROV.VECES>MEDIA THEN
    DBMS_OUTPUT.PUT_LINE(AROV.VOTANTE || ' ha participado ' || AROV.VECES || ' veces ');
    END IF;
  END LOOP;
END;
----------------------------------------------------------------------
--Parte3
SET SERVEROUTPUT ON;
 DROP TABLE VOTANTESANTIGUOS;
 CREATE TABLE VOTANTESANTIGUOS AS SELECT * FROM VOTANTES WHERE FECHANACIMIENTO<'1/1/1980';
 ALTER TABLE VOTANTESANTIGUOS ADD SUELDO NUMBER DEFAULT 0 NOT NULL;
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=1500
 WHERE SITUACIONLABORAL='Activo';
----------------------------------------------------------------------
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=1500
 WHERE SITUACIONLABORAL='Activo';
 
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=1000
 WHERE SITUACIONLABORAL='Jubilado';
 
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=SUELDO+100
 WHERE ESTUDIOSSUPERIORES='Ninguno' AND SITUACIONLABORAL='Activo';
 
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=SUELDO+200
 WHERE ESTUDIOSSUPERIORES='Basicos'  AND SITUACIONLABORAL='Activo';
 
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=SUELDO+300
 WHERE ESTUDIOSSUPERIORES='Superiores' AND SITUACIONLABORAL='Activo';
 
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=SUELDO+1000
 WHERE ESTUDIOSSUPERIORES='Doctorados' AND SITUACIONLABORAL='Activo';
 ----------------------------------------------------------------------
UPDATE VOTANTESANTIGUOS
 SET SUELDO=SUELDO*(1.05)
 WHERE SITUACIONLABORAL='Jubilado';
 
 UPDATE VOTANTESANTIGUOS
 SET SUELDO=SUELDO*(1.02)
 WHERE NOT SITUACIONLABORAL='Jubilado';
 ----------------------------------------------------------------------
 INSERT INTO PARTIDOS(IDPARTIDO, NOMBRECOMPLETO, DIRECCION, CIUDAD, PRESIDENTE, FECHACREACION, PRESUPUESTO) VALUES(6, 'NUEVO', 'LA PARRA', 'CORDOBA', 'EMILIO', '12/12/1999',0);
SET SERVEROUTPUT ON;
DECLARE
  CURSOR C IS 
  SELECT * FROM PARTIDOS;
  COUNTER NUMBER:=0;
  TOTAL NUMBER:=0;
BEGIN
  FOR I IN C LOOP
    TOTAL:=TOTAL+I.PRESUPUESTO;
    COUNTER:=COUNTER+1;
  END LOOP;
  UPDATE PARTIDOS
  SET PRESUPUESTO=TOTAL/COUNTER;
END;
