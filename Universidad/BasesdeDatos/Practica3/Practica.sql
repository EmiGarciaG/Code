--Parte1
SELECT NOMBRECOMPLETO, DNI, LOCALIDAD FROM VOTANTES
WHERE SUBSTR(DNI,-1,1)=LOCALIDAD+1;

--Segunda Opción Ej1
SELECT NOMBRECOMPLETO, DNI, LOCALIDAD FROM VOTANTES
WHERE SUBSTR(DNI, LENGTH(DNI)-LENGTH(LOCALIDAD)+1)=LOCALIDAD+1;

SELECT V.NOMBRECOMPLETO, DECODE(L.NOMBRE, 'Cordoba', 'Madrid', 'Montilla', 'Madrid', 'Baena', 'Madrid', L.NOMBRE) "NOMBRE" FROM VOTANTES V, LOCALIDADES L
WHERE L.IDLOCALIDAD=V.LOCALIDAD;

SELECT P.SIGLAS, COUNT(ER.PARTIDO) FROM PARTIDOS P, EVENTOS_RESULTADOS ER
WHERE P.IDPARTIDO=ER.PARTIDO
GROUP BY P.SIGLAS
HAVING COUNT(ER.PARTIDO)=(SELECT MAX(COUNT(PARTIDO)) FROM EVENTOS_RESULTADOS
GROUP BY PARTIDO);

SELECT NOMBRECOMPLETO, DNI, FECHANACIMIENTO FROM VOTANTES
WHERE FECHANACIMIENTO=(SELECT MIN(FECHANACIMIENTO) FROM VOTANTES 
WHERE FECHANACIMIENTO>(SELECT MIN(FECHANACIMIENTO) FROM VOTANTES));

SELECT C.VOTANTE, V.NOMBRECOMPLETO, COUNT(C.VOTANTE) "VECES" FROM CONSULTAS C, VOTANTES V
WHERE C.VOTANTE=V.DNI
GROUP BY C.VOTANTE, V.NOMBRECOMPLETO
ORDER BY "VECES" DESC;

SELECT C.VOTANTE, V.NOMBRECOMPLETO, COUNT(C.VOTANTE) "VECES" FROM CONSULTAS C, VOTANTES V
WHERE C.VOTANTE=V.DNI
GROUP BY C.VOTANTE, V.NOMBRECOMPLETO
HAVING COUNT(C.VOTANTE)>(SELECT AVG(COUNT(VOTANTE)) FROM CONSULTAS GROUP BY VOTANTE)
ORDER BY "VECES" DESC;

SELECT V.NOMBRECOMPLETO FROM CONSULTAS C, VOTANTES V
WHERE C.VOTANTE=V.DNI
GROUP BY  V.NOMBRECOMPLETO
HAVING COUNT(C.VOTANTE)>(SELECT AVG(COUNT(VOTANTE)) FROM CONSULTAS GROUP BY VOTANTE);

SELECT C.VOTANTE, V.NOMBRECOMPLETO, COUNT(C.VOTANTE) "VECES" FROM CONSULTAS C, VOTANTES V
WHERE C.VOTANTE=V.DNI AND V.FECHANACIMIENTO!=(SELECT MIN(FECHANACIMIENTO) FROM VOTANTES 
WHERE FECHANACIMIENTO>(SELECT MIN(FECHANACIMIENTO) FROM VOTANTES))
GROUP BY C.VOTANTE, V.NOMBRECOMPLETO
ORDER BY "VECES" DESC;

---------------------------------------------------------------------------
--Parte2
SELECT SUBSTR(V.NOMBRECOMPLETO, 1, INSTR(NOMBRECOMPLETO, ' ')) "NOMBRE", V.LOCALIDAD, P.COMUNIDAD FROM VOTANTES V, PROVINCIAS P, LOCALIDADES L
WHERE L.IDLOCALIDAD=V.LOCALIDAD AND L.PROVINCIA=P.IDPROVINCIA AND V.LOCALIDAD IN (1,3,9);

SELECT CONCAT(CONCAT(A.NOMBRE, ' va antes que '), B.NOMBRE) FROM LOCALIDADES A, LOCALIDADES B
WHERE A.IDLOCALIDAD=B.IDLOCALIDAD-1;

SELECT NOMBRE FROM LOCALIDADES
WHERE NUMEROHABITANTES>(SELECT L.NUMEROHABITANTES FROM LOCALIDADES L, VOTANTES V
WHERE L.IDLOCALIDAD=V.LOCALIDAD AND V.FECHANACIMIENTO=(SELECT MIN(FECHANACIMIENTO) FROM VOTANTES
WHERE FECHANACIMIENTO>(SELECT MIN(FECHANACIMIENTO) FROM VOTANTES)));

SELECT NOMBRECOMPLETO, LOCALIDAD, 
CASE WHEN TRUNC((SYSDATE - FECHANACIMIENTO)/ 365.25) >= 18 
THEN 'Mayor de edad' 
ELSE 'Menor de edad' 
END MAYORIAEDAD
FROM VOTANTES
WHERE LOCALIDAD IN (2, 4, 8);

SELECT L.NOMBRE, L.NUMEROHABITANTES, P.COMUNIDAD FROM LOCALIDADES L, PROVINCIAS P
WHERE P.IDPROVINCIA=L.PROVINCIA AND P.IDPROVINCIA IN (1,2,3) AND L.NUMEROHABITANTES>ANY(SELECT NUMEROHABITANTES FROM LOCALIDADES WHERE PROVINCIA='4');

SELECT V.NOMBRECOMPLETO, V.SITUACIONLABORAL, COUNT(C.VOTANTE) "VECES" FROM CONSULTAS C, VOTANTES V
WHERE C.VOTANTE=V.DNI AND V.SITUACIONLABORAL='Activo'
GROUP BY V.NOMBRECOMPLETO, V.SITUACIONLABORAL
HAVING COUNT(C.VOTANTE)<(SELECT AVG(COUNT(VOTANTE)) FROM CONSULTAS
GROUP BY VOTANTE)
ORDER BY "VECES" DESC;

SELECT L.NOMBRE, SUB.LOCALIDAD, AVG(ESTUDIOS) MEDIA FROM
(SELECT NOMBRECOMPLETO, ESTUDIOSSUPERIORES, LOCALIDAD, DECODE(ESTUDIOSSUPERIORES,
  'Ninguno', 1, 
  'Basicos', 2, 
  'Superiores', 3,
  'Doctorado', 4) ESTUDIOS
FROM VOTANTES) SUB, LOCALIDADES L
WHERE SUB.LOCALIDAD=L.IDLOCALIDAD 
GROUP BY L.NOMBRE, SUB.LOCALIDAD
ORDER BY MEDIA DESC;

SELECT L.NOMBRE, SUB1.LOCALIDAD, SUB1.MEDIAL FROM LOCALIDADES L,
(SELECT LOCALIDAD, AVG(DECODE(ESTUDIOSSUPERIORES,
  'Ninguno', 1, 
  'Basicos', 2, 
  'Superiores', 3,
  'Doctorado', 4)) MEDIAL
FROM VOTANTES V, LOCALIDADES L
WHERE V.LOCALIDAD=L.IDLOCALIDAD
GROUP BY LOCALIDAD) SUB1
WHERE SUB1.LOCALIDAD=L.IDLOCALIDAD
AND SUB1.MEDIAL>ALL(SELECT AVG(DECODE(ESTUDIOSSUPERIORES,
  'Ninguno', 1, 
  'Basicos', 2,  
  'Superiores', 3,
  'Doctorado', 4, -1)) ESTUDIOSP
FROM VOTANTES, LOCALIDADES
WHERE VOTANTES.LOCALIDAD=LOCALIDADES.IDLOCALIDAD
GROUP BY PROVINCIA);
